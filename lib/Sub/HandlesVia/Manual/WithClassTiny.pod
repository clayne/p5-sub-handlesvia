=pod

=encoding utf-8

=head1 NAME

Sub::HandlesVia::Manual::WithClassTiny - using Sub::HandlesVia with Class::Tiny

=head1 SYNOPSIS

 package Kitchen;
 
 use Class::Tiny {
   foods  => sub { [] },
   drinks => sub { [ 'water' ] },
 };
 
 use Sub::HandlesVia::Declare 'foods', Array => (
   all_foods  => 'all',
   add_food   => 'push',
 );
 
 use Sub::HandlesVia::Declare 'drinks', Array => (
   all_drinks => 'all',
   add_drink  => 'push',
 );

=head1 MANUAL

Sub::HandlesVia allows you to delegate methods from your class to the
values of your objects' attributes.

Conceptually, it allows you to define C<< $object->push_number($n) >>
to be a shortcut for C<< $object->numbers->push($n) >> except that
C<< $object->numbers >> is an arrayref, so doesn't have methods you
can call on it like C<push>.

=head2 Which Methods Can Be Delegated To?

The second parameter ("Array" in the synopsis) indicates which library
of methods should be available. Valid values include
L<Array|Sub::HandlesVia::HandlerLibrary::Array>,
L<Blessed|Sub::HandlesVia::HandlerLibrary::Blessed>,
L<Bool|Sub::HandlesVia::HandlerLibrary::Bool>,
L<Code|Sub::HandlesVia::HandlerLibrary::Code>,
L<Counter|Sub::HandlesVia::HandlerLibrary::Counter>,
L<Hash|Sub::HandlesVia::HandlerLibrary::Hash>,
L<Number|Sub::HandlesVia::HandlerLibrary::Number>,
L<Scalar|Sub::HandlesVia::HandlerLibrary::Scalar>, and
L<String|Sub::HandlesVia::HandlerLibrary::String>.

An arrayref can be provided, though many of the options are conceptually
contradictory.

 use Sub::HandlesVia::Declare 'num', [ 'Number', 'Scalar' ] => (
   ...,
 );

=head2 Run-Time Delegation

Rather than using L<Sub::HandlesVia::Declare> which operates at compile time,
you can use the C<delegations> function at run time. Which you choose is
largely down to style and personal preference.

 package Kitchen;
 
 use Class::Tiny {
   foods  => sub { [] },
   drinks => sub { [ 'water' ] },
 };
 
 use Sub::HandlesVia qw( delegations );
 
 delegations(
   attribute    => 'foods',
   handles_via  => 'Array',
   handles      => {
     all_foods    => 'all',
     add_food     => 'push',
   },
 );
 
 delegations(
   attribute    => 'drinks',
   handles_via  => 'Array',
   handles      => {
     all_drinks   => 'all',
     add_drink    => 'push',
   },
 );

=head1 BUGS

Please report any bugs to
L<https://github.com/tobyink/p5-sub-handlesvia/issues>.

=head1 SEE ALSO

Misc advanced documentation:
L<Sub::HandlesVia::Manual::Advanced>.

L<Sub::HandlesVia>.

Documentation for delegatable methods:
L<Sub::HandlesVia::HandlerLibrary::Array>,
L<Sub::HandlesVia::HandlerLibrary::Blessed>,
L<Sub::HandlesVia::HandlerLibrary::Bool>,
L<Sub::HandlesVia::HandlerLibrary::Code>,
L<Sub::HandlesVia::HandlerLibrary::Counter>,
L<Sub::HandlesVia::HandlerLibrary::Hash>,
L<Sub::HandlesVia::HandlerLibrary::Number>,
L<Sub::HandlesVia::HandlerLibrary::Scalar>, and
L<Sub::HandlesVia::HandlerLibrary::String>.

=head1 AUTHOR

Toby Inkster E<lt>tobyink@cpan.orgE<gt>.

=head1 COPYRIGHT AND LICENCE

This software is copyright (c) 2022 by Toby Inkster.

This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

=head1 DISCLAIMER OF WARRANTIES

THIS PACKAGE IS PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED
WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.

